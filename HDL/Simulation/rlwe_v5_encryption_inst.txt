28400 00101000010000000000 store pk[0] into r1
28800 00101000100000000000 store pk[1] into r2
28C00 00101000110000000000 store sk into r3
29015 00101001000000010101 store input into r4 (message) and generate gaussian number (r) into r5
00016 00000000000000010110 generate gaussian number (e1) into r6
2A417 00101010010000010111 store input (0's) into r9 and generate gaussian (e2) into r7
06540 00000110010101000000 add r9 and r5, put into r9
18400 00011000010000000000 mult phi r1
1A400 00011010010000000000 mult phi r9
20400 00100000010000000000 ntt r1
22400 00100010010000000000 ntt r9
10640 00010000011001000000 mult r1 and r9, put into r1
24400 00100100010000000000 intt r1
1C400 00011100010000000000 mult iphi r1
04580 00000100010110000000 add r1 (pk[0]*r) by r6 (e1) and put into r1 (pk[0]*r + e1)
18800 00011000100000000000 mult phi r2
19400 00011001010000000000 mult phi r5
20800 00100000100000000000 ntt r2
21400 00100001010000000000 ntt r5
10940 00010000100101000000 mult r2 with r5 and put into r2
24800 00100100100000000000 intt r2
1C800 00011100100000000000 mult iphi r2
049C0 00000100100111000000 add r2 (pk[1] * r) by r7 (e2) and put into r2 (pk[1] * r + e2)
2A000 00101010000000000000 store q/2 into r8
11200 00010001001000000000 mult r4 (message) by r8 (q/2) and put into r4 (message*q/2)
04900 00000100100100000000 add r2 (pk[1] * r + e2) by r4 (messageq/2) and put into r2 (pk[1] * r + e2 + messageq/2)
08400 00001000010000000000 addi r1 with 0 to output encrypted_message[0]
08800 00001000100000000000 addi r2 with 0 to output encrypted_message[1]